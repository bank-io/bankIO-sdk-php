<?php
/**
 * PurposeCode
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  BankIO\Sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * bankIO NextGenPSD2 XS2A Framework
 *
 * # Summary The **NextGenPSD2** *Framework Version 1.3.6* (with errata) offers a modern, open, harmonised and interoperable set of Application Programming Interfaces (APIs) as the safest and most efficient way to provide data securely. The NextGenPSD2 Framework reduces XS2A complexity and costs, addresses the problem of multiple competing standards  in Europe and, aligned with the goals of the Euro Retail Payments Board, enables European banking customers to benefit from innovative products and services ('Banking as a Service') by granting TPPs safe and secure (authenticated and authorised) access to their bank accounts and financial data.  The possible Approaches are:   * Redirect SCA Approach   * OAuth SCA Approach   * Decoupled SCA Approach   * Embedded SCA Approach without SCA method   * Embedded SCA Approach with only one SCA method available   * Embedded SCA Approach with Selection of a SCA method    Not every message defined in this API definition is necessary for all approaches.    Furthermore this API definition does not differ between methods which are mandatory, conditional, or optional.   Therefore for a particular implementation of a Berlin Group PSD2 compliant API it is only necessary to support    a certain subset of the methods defined in this API definition.    **Please have a look at the implementation guidelines if you are not sure    which message has to be used for the approach you are going to use.**  ## Some General Remarks Related to this version of the OpenAPI Specification: * **This API definition is based on the Implementation Guidelines of the Berlin Group PSD2 API.**    It is not a replacement in any sense.   The main specification is (at the moment) always the Implementation Guidelines of the Berlin Group PSD2 API. * **This API definition contains the REST-API for requests from the PISP to the ASPSP.** * **This API definition contains the messages for all different approaches defined in the Implementation Guidelines.** * According to the OpenAPI-Specification [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md]        \"If in is \"header\" and the name field is \"Accept\", \"Content-Type\" or \"Authorization\", the parameter definition SHALL be ignored.\"      The element \"Accept\" will not be defined in this file at any place.      The elements \"Content-Type\" and \"Authorization\" are implicitly defined by the OpenApi tags \"content\" and \"security\".    * There are several predefined types which might occur in payment initiation messages,    but are not used in the standard JSON messages in the Implementation Guidelines.   Therefore they are not used in the corresponding messages in this file either.   We added them for the convenience of the user.   If there is a payment product, which needs these fields, one can easily use the predefined types.   But the ASPSP need not to accept them in general.    * **We omit the definition of all standard HTTP header elements (mandatory/optional/conditional)    except they are mentioned in the Implementation Guidelines.**   Therefore the implementer might add these in his own realisation of a PSD2 comlient API in addition to the elements defined in this file.     ## General Remarks on Data Types  The Berlin Group definition of UTF-8 strings in context of the PSD2 API has to support at least the following characters  a b c d e f g h i j k l m n o p q r s t u v w x y z  A B C D E F G H I J K L M N O P Q R S T U V W X Y Z  0 1 2 3 4 5 6 7 8 9  / - ? : ( ) . , ' +  Space
 *
 * The version of the OpenAPI document: 1.3.6_2020-05-28
 * Contact: info@berlin-group.org
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BankIO\Sdk\Model;
use \BankIO\Sdk\ObjectSerializer;

/**
 * PurposeCode Class Doc Comment
 *
 * @category Class
 * @description ExternalPurpose1Code from ISO 20022.  Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
 * @package  BankIO\Sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PurposeCode
{
    /**
     * Possible values of this enum
     */
    const BKDF = 'BKDF';
    const BKFE = 'BKFE';
    const BKFM = 'BKFM';
    const BKIP = 'BKIP';
    const BKPP = 'BKPP';
    const CBLK = 'CBLK';
    const CDCB = 'CDCB';
    const CDCD = 'CDCD';
    const CDCS = 'CDCS';
    const CDDP = 'CDDP';
    const CDOC = 'CDOC';
    const CDQC = 'CDQC';
    const ETUP = 'ETUP';
    const FCOL = 'FCOL';
    const MTUP = 'MTUP';
    const ACCT = 'ACCT';
    const CASH = 'CASH';
    const COLL = 'COLL';
    const CSDB = 'CSDB';
    const DEPT = 'DEPT';
    const INTC = 'INTC';
    const LIMA = 'LIMA';
    const NETT = 'NETT';
    const BFWD = 'BFWD';
    const CCIR = 'CCIR';
    const CCPC = 'CCPC';
    const CCPM = 'CCPM';
    const CCSM = 'CCSM';
    const CRDS = 'CRDS';
    const CRPR = 'CRPR';
    const CRSP = 'CRSP';
    const CRTL = 'CRTL';
    const EQPT = 'EQPT';
    const EQUS = 'EQUS';
    const EXPT = 'EXPT';
    const EXTD = 'EXTD';
    const FIXI = 'FIXI';
    const FWBC = 'FWBC';
    const FWCC = 'FWCC';
    const FWSB = 'FWSB';
    const FWSC = 'FWSC';
    const MARG = 'MARG';
    const MBSB = 'MBSB';
    const MBSC = 'MBSC';
    const MGCC = 'MGCC';
    const MGSC = 'MGSC';
    const OCCC = 'OCCC';
    const OPBC = 'OPBC';
    const OPCC = 'OPCC';
    const OPSB = 'OPSB';
    const OPSC = 'OPSC';
    const OPTN = 'OPTN';
    const OTCD = 'OTCD';
    const REPO = 'REPO';
    const RPBC = 'RPBC';
    const RPCC = 'RPCC';
    const RPSB = 'RPSB';
    const RPSC = 'RPSC';
    const RVPO = 'RVPO';
    const SBSC = 'SBSC';
    const SCIE = 'SCIE';
    const SCIR = 'SCIR';
    const SCRP = 'SCRP';
    const SHBC = 'SHBC';
    const SHCC = 'SHCC';
    const SHSL = 'SHSL';
    const SLEB = 'SLEB';
    const SLOA = 'SLOA';
    const SWBC = 'SWBC';
    const SWCC = 'SWCC';
    const SWPT = 'SWPT';
    const SWSB = 'SWSB';
    const SWSC = 'SWSC';
    const TBAS = 'TBAS';
    const TBBC = 'TBBC';
    const TBCC = 'TBCC';
    const TRCP = 'TRCP';
    const AGRT = 'AGRT';
    const AREN = 'AREN';
    const BEXP = 'BEXP';
    const BOCE = 'BOCE';
    const COMC = 'COMC';
    const CPYR = 'CPYR';
    const GDDS = 'GDDS';
    const GDSV = 'GDSV';
    const GSCB = 'GSCB';
    const LICF = 'LICF';
    const MP2_B = 'MP2B';
    const POPE = 'POPE';
    const ROYA = 'ROYA';
    const SCVE = 'SCVE';
    const SERV = 'SERV';
    const SUBS = 'SUBS';
    const SUPP = 'SUPP';
    const TRAD = 'TRAD';
    const CHAR = 'CHAR';
    const COMT = 'COMT';
    const MP2_P = 'MP2P';
    const ECPG = 'ECPG';
    const ECPR = 'ECPR';
    const ECPU = 'ECPU';
    const EPAY = 'EPAY';
    const CLPR = 'CLPR';
    const COMP = 'COMP';
    const DBTC = 'DBTC';
    const GOVI = 'GOVI';
    const HLRP = 'HLRP';
    const HLST = 'HLST';
    const INPC = 'INPC';
    const INPR = 'INPR';
    const INSC = 'INSC';
    const INSU = 'INSU';
    const INTE = 'INTE';
    const LBRI = 'LBRI';
    const LIFI = 'LIFI';
    const LOAN = 'LOAN';
    const LOAR = 'LOAR';
    const PENO = 'PENO';
    const PPTI = 'PPTI';
    const RELG = 'RELG';
    const RINP = 'RINP';
    const TRFD = 'TRFD';
    const FORW = 'FORW';
    const FXNT = 'FXNT';
    const ADMG = 'ADMG';
    const ADVA = 'ADVA';
    const BCDM = 'BCDM';
    const BCFG = 'BCFG';
    const BLDM = 'BLDM';
    const BNET = 'BNET';
    const CBFF = 'CBFF';
    const CBFR = 'CBFR';
    const CCRD = 'CCRD';
    const CDBL = 'CDBL';
    const CFEE = 'CFEE';
    const CGDD = 'CGDD';
    const CORT = 'CORT';
    const COST = 'COST';
    const CPKC = 'CPKC';
    const DCRD = 'DCRD';
    const DSMT = 'DSMT';
    const DVPM = 'DVPM';
    const EDUC = 'EDUC';
    const FACT = 'FACT';
    const FAND = 'FAND';
    const FCPM = 'FCPM';
    const FEES = 'FEES';
    const GOVT = 'GOVT';
    const ICCP = 'ICCP';
    const IDCP = 'IDCP';
    const IHRP = 'IHRP';
    const INSM = 'INSM';
    const IVPT = 'IVPT';
    const MCDM = 'MCDM';
    const MCFG = 'MCFG';
    const MSVC = 'MSVC';
    const NOWS = 'NOWS';
    const OCDM = 'OCDM';
    const OCFG = 'OCFG';
    const OFEE = 'OFEE';
    const OTHR = 'OTHR';
    const PADD = 'PADD';
    const PTSP = 'PTSP';
    const RCKE = 'RCKE';
    const RCPT = 'RCPT';
    const REBT = 'REBT';
    const REFU = 'REFU';
    const RENT = 'RENT';
    const REOD = 'REOD';
    const RIMB = 'RIMB';
    const RPNT = 'RPNT';
    const RRBN = 'RRBN';
    const RVPM = 'RVPM';
    const SLPI = 'SLPI';
    const SPLT = 'SPLT';
    const STDY = 'STDY';
    const TBAN = 'TBAN';
    const TBIL = 'TBIL';
    const TCSC = 'TCSC';
    const TELI = 'TELI';
    const TMPG = 'TMPG';
    const TPRI = 'TPRI';
    const TPRP = 'TPRP';
    const TRNC = 'TRNC';
    const TRVC = 'TRVC';
    const WEBI = 'WEBI';
    const ANNI = 'ANNI';
    const CAFI = 'CAFI';
    const CFDI = 'CFDI';
    const CMDT = 'CMDT';
    const DERI = 'DERI';
    const DIVD = 'DIVD';
    const FREX = 'FREX';
    const HEDG = 'HEDG';
    const INVS = 'INVS';
    const PRME = 'PRME';
    const SAVG = 'SAVG';
    const SECU = 'SECU';
    const SEPI = 'SEPI';
    const TREA = 'TREA';
    const UNIT = 'UNIT';
    const FNET = 'FNET';
    const FUTR = 'FUTR';
    const ANTS = 'ANTS';
    const CVCF = 'CVCF';
    const DMEQ = 'DMEQ';
    const DNTS = 'DNTS';
    const HLTC = 'HLTC';
    const HLTI = 'HLTI';
    const HSPC = 'HSPC';
    const ICRF = 'ICRF';
    const LTCF = 'LTCF';
    const MAFC = 'MAFC';
    const MARF = 'MARF';
    const MDCS = 'MDCS';
    const VIEW = 'VIEW';
    const CDEP = 'CDEP';
    const SWFP = 'SWFP';
    const SWPP = 'SWPP';
    const SWRS = 'SWRS';
    const SWUF = 'SWUF';
    const ADCS = 'ADCS';
    const AEMP = 'AEMP';
    const ALLW = 'ALLW';
    const ALMY = 'ALMY';
    const BBSC = 'BBSC';
    const BECH = 'BECH';
    const BENE = 'BENE';
    const BONU = 'BONU';
    const CCHD = 'CCHD';
    const COMM = 'COMM';
    const CSLP = 'CSLP';
    const GFRP = 'GFRP';
    const GVEA = 'GVEA';
    const GVEB = 'GVEB';
    const GVEC = 'GVEC';
    const GVED = 'GVED';
    const GWLT = 'GWLT';
    const HREC = 'HREC';
    const PAYR = 'PAYR';
    const PEFC = 'PEFC';
    const PENS = 'PENS';
    const PRCP = 'PRCP';
    const RHBS = 'RHBS';
    const SALA = 'SALA';
    const SSBE = 'SSBE';
    const LBIN = 'LBIN';
    const LCOL = 'LCOL';
    const LFEE = 'LFEE';
    const LMEQ = 'LMEQ';
    const LMFI = 'LMFI';
    const LMRK = 'LMRK';
    const LREB = 'LREB';
    const LREV = 'LREV';
    const LSFL = 'LSFL';
    const ESTX = 'ESTX';
    const FWLV = 'FWLV';
    const GSTX = 'GSTX';
    const HSTX = 'HSTX';
    const INTX = 'INTX';
    const NITX = 'NITX';
    const PTXP = 'PTXP';
    const RDTX = 'RDTX';
    const TAXS = 'TAXS';
    const VATX = 'VATX';
    const WHLD = 'WHLD';
    const TAXR = 'TAXR';
    const B112 = 'B112';
    const BR12 = 'BR12';
    const TLRF = 'TLRF';
    const TLRR = 'TLRR';
    const AIRB = 'AIRB';
    const BUSB = 'BUSB';
    const FERB = 'FERB';
    const RLWY = 'RLWY';
    const TRPT = 'TRPT';
    const CBTV = 'CBTV';
    const ELEC = 'ELEC';
    const ENRG = 'ENRG';
    const GASB = 'GASB';
    const NWCH = 'NWCH';
    const NWCM = 'NWCM';
    const OTLC = 'OTLC';
    const PHON = 'PHON';
    const UBIL = 'UBIL';
    const WTER = 'WTER';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::BKDF,
            self::BKFE,
            self::BKFM,
            self::BKIP,
            self::BKPP,
            self::CBLK,
            self::CDCB,
            self::CDCD,
            self::CDCS,
            self::CDDP,
            self::CDOC,
            self::CDQC,
            self::ETUP,
            self::FCOL,
            self::MTUP,
            self::ACCT,
            self::CASH,
            self::COLL,
            self::CSDB,
            self::DEPT,
            self::INTC,
            self::LIMA,
            self::NETT,
            self::BFWD,
            self::CCIR,
            self::CCPC,
            self::CCPM,
            self::CCSM,
            self::CRDS,
            self::CRPR,
            self::CRSP,
            self::CRTL,
            self::EQPT,
            self::EQUS,
            self::EXPT,
            self::EXTD,
            self::FIXI,
            self::FWBC,
            self::FWCC,
            self::FWSB,
            self::FWSC,
            self::MARG,
            self::MBSB,
            self::MBSC,
            self::MGCC,
            self::MGSC,
            self::OCCC,
            self::OPBC,
            self::OPCC,
            self::OPSB,
            self::OPSC,
            self::OPTN,
            self::OTCD,
            self::REPO,
            self::RPBC,
            self::RPCC,
            self::RPSB,
            self::RPSC,
            self::RVPO,
            self::SBSC,
            self::SCIE,
            self::SCIR,
            self::SCRP,
            self::SHBC,
            self::SHCC,
            self::SHSL,
            self::SLEB,
            self::SLOA,
            self::SWBC,
            self::SWCC,
            self::SWPT,
            self::SWSB,
            self::SWSC,
            self::TBAS,
            self::TBBC,
            self::TBCC,
            self::TRCP,
            self::AGRT,
            self::AREN,
            self::BEXP,
            self::BOCE,
            self::COMC,
            self::CPYR,
            self::GDDS,
            self::GDSV,
            self::GSCB,
            self::LICF,
            self::MP2_B,
            self::POPE,
            self::ROYA,
            self::SCVE,
            self::SERV,
            self::SUBS,
            self::SUPP,
            self::TRAD,
            self::CHAR,
            self::COMT,
            self::MP2_P,
            self::ECPG,
            self::ECPR,
            self::ECPU,
            self::EPAY,
            self::CLPR,
            self::COMP,
            self::DBTC,
            self::GOVI,
            self::HLRP,
            self::HLST,
            self::INPC,
            self::INPR,
            self::INSC,
            self::INSU,
            self::INTE,
            self::LBRI,
            self::LIFI,
            self::LOAN,
            self::LOAR,
            self::PENO,
            self::PPTI,
            self::RELG,
            self::RINP,
            self::TRFD,
            self::FORW,
            self::FXNT,
            self::ADMG,
            self::ADVA,
            self::BCDM,
            self::BCFG,
            self::BLDM,
            self::BNET,
            self::CBFF,
            self::CBFR,
            self::CCRD,
            self::CDBL,
            self::CFEE,
            self::CGDD,
            self::CORT,
            self::COST,
            self::CPKC,
            self::DCRD,
            self::DSMT,
            self::DVPM,
            self::EDUC,
            self::FACT,
            self::FAND,
            self::FCPM,
            self::FEES,
            self::GOVT,
            self::ICCP,
            self::IDCP,
            self::IHRP,
            self::INSM,
            self::IVPT,
            self::MCDM,
            self::MCFG,
            self::MSVC,
            self::NOWS,
            self::OCDM,
            self::OCFG,
            self::OFEE,
            self::OTHR,
            self::PADD,
            self::PTSP,
            self::RCKE,
            self::RCPT,
            self::REBT,
            self::REFU,
            self::RENT,
            self::REOD,
            self::RIMB,
            self::RPNT,
            self::RRBN,
            self::RVPM,
            self::SLPI,
            self::SPLT,
            self::STDY,
            self::TBAN,
            self::TBIL,
            self::TCSC,
            self::TELI,
            self::TMPG,
            self::TPRI,
            self::TPRP,
            self::TRNC,
            self::TRVC,
            self::WEBI,
            self::ANNI,
            self::CAFI,
            self::CFDI,
            self::CMDT,
            self::DERI,
            self::DIVD,
            self::FREX,
            self::HEDG,
            self::INVS,
            self::PRME,
            self::SAVG,
            self::SECU,
            self::SEPI,
            self::TREA,
            self::UNIT,
            self::FNET,
            self::FUTR,
            self::ANTS,
            self::CVCF,
            self::DMEQ,
            self::DNTS,
            self::HLTC,
            self::HLTI,
            self::HSPC,
            self::ICRF,
            self::LTCF,
            self::MAFC,
            self::MARF,
            self::MDCS,
            self::VIEW,
            self::CDEP,
            self::SWFP,
            self::SWPP,
            self::SWRS,
            self::SWUF,
            self::ADCS,
            self::AEMP,
            self::ALLW,
            self::ALMY,
            self::BBSC,
            self::BECH,
            self::BENE,
            self::BONU,
            self::CCHD,
            self::COMM,
            self::CSLP,
            self::GFRP,
            self::GVEA,
            self::GVEB,
            self::GVEC,
            self::GVED,
            self::GWLT,
            self::HREC,
            self::PAYR,
            self::PEFC,
            self::PENS,
            self::PRCP,
            self::RHBS,
            self::SALA,
            self::SSBE,
            self::LBIN,
            self::LCOL,
            self::LFEE,
            self::LMEQ,
            self::LMFI,
            self::LMRK,
            self::LREB,
            self::LREV,
            self::LSFL,
            self::ESTX,
            self::FWLV,
            self::GSTX,
            self::HSTX,
            self::INTX,
            self::NITX,
            self::PTXP,
            self::RDTX,
            self::TAXS,
            self::VATX,
            self::WHLD,
            self::TAXR,
            self::B112,
            self::BR12,
            self::TLRF,
            self::TLRR,
            self::AIRB,
            self::BUSB,
            self::FERB,
            self::RLWY,
            self::TRPT,
            self::CBTV,
            self::ELEC,
            self::ENRG,
            self::GASB,
            self::NWCH,
            self::NWCM,
            self::OTLC,
            self::PHON,
            self::UBIL,
            self::WTER,
        ];
    }
}


